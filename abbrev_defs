;;-*-coding: utf-8;-*-
(define-abbrev-table 'cperl-mode-abbrev-table
  '(
    ("=head1" "=head1" cperl-electric-pod :count 0)
    ("=head2" "=head2" cperl-electric-pod :count 0)
    ("=over" "=over" cperl-electric-pod :count 0)
    ("=pod" "=pod" cperl-electric-pod :count 0)
    ("continue" "continue" cperl-electric-else :count 0)
    ("do" "do" cperl-electric-keyword :count 0)
    ("else" "else" cperl-electric-else :count 0)
    ("elsif" "elsif" cperl-electric-keyword :count 0)
    ("for" "for" cperl-electric-keyword :count 0)
    ("foreach" "foreach" cperl-electric-keyword :count 0)
    ("foreachmy" "foreachmy" cperl-electric-keyword :count 0)
    ("formy" "formy" cperl-electric-keyword :count 0)
    ("head1" "head1" cperl-electric-pod :count 0)
    ("head2" "head2" cperl-electric-pod :count 0)
    ("if" "if" cperl-electric-keyword :count 0)
    ("over" "over" cperl-electric-pod :count 0)
    ("pod" "pod" cperl-electric-pod :count 0)
    ("unless" "unless" cperl-electric-keyword :count 0)
    ("until" "until" cperl-electric-keyword :count 0)
    ("while" "while" cperl-electric-keyword :count 0)
   ))

(define-abbrev-table 'global-abbrev-table
  '(
    ("Validaitons" "Validations" nil :count 1)
    ("Wofkflow" "Workflow" nil :count 1)
    ("approvied" "approved" nil :count 1)
    ("assocation" "association" nil :count 2)
    ("atetndance" "attendance" nil :count 1)
    ("attednance" "attendance" nil :count 3)
    ("attenadnae" "attendance" nil :count 4)
    ("attirbute" "attribute" nil :count 1)
    ("attnedance" "attendance" nil :count 1)
    ("attriutes" "attributes" nil :count 1)
    ("atttendance" "attendance" nil :count 1)
    ("bakcup" "backup" nil :count 1)
    ("befoer" "before" nil :count 5)
    ("bofore" "before" nil :count 2)
    ("chnage" "change" nil :count 1)
    ("closuer" "closure" nil :count 6)
    ("closuers" "closures" nil :count 1)
    ("comapny" "company" nil :count 1)
    ("commnet" "comment" nil :count 1)
    ("concerte" "concrete" nil :count 1)
    ("conext" "context" nil :count 2)
    ("configuratin" "configuration" nil :count 1)
    ("contetn" "content" nil :count 2)
    ("contianer" "container" nil :count 1)
    ("craete" "create" nil :count 2)
    ("cretae" "create" nil :count 1)
    ("custoemr" "customer" nil :count 2)
    ("dcoument" "document" nil :count 1)
    ("deafult" "default" nil :count 2)
    ("declration" "declaration" nil :count 1)
    ("defaluts" "defaults" nil :count 1)
    ("defualt" "default" nil :count 2)
    ("deliveris" "deliveries" nil :count 1)
    ("delviery" "delivery" nil :count 1)
    ("descroy" "destroy" nil :count 1)
    ("destory" "destroy" nil :count 9)
    ("devliery" "delivery" nil :count 1)
    ("disabel" "disable" nil :count 2)
    ("distict" "distinct" nil :count 1)
    ("documenatable" "documentable" nil :count 1)
    ("documetn" "document" nil :count 4)
    ("doucment" "document" nil :count 3)
    ("doucments" "documents" nil :count 1)
    ("eargings" "earnings" nil :count 1)
    ("ecnrypted" "encrypted" nil :count 1)
    ("eigth" "eight" nil :count 1)
    ("emial" "email" nil :count 2)
    ("emloyee" "employee" nil :count 1)
    ("emloyees" "employees" nil :count 1)
    ("emploee" "employee" nil :count 2)
    ("employement" "employment" nil :count 3)
    ("employmnet" "employment" nil :count 1)
    ("emplyee" "employee" nil :count 1)
    ("emplyt" "empty" nil :count 1)
    ("empoyee" "employee" nil :count 7)
    ("empoyment" "employment" nil :count 3)
    ("enalbe" "enable" nil :count 2)
    ("excpet" "except" nil :count 1)
    ("exicse" "excise" nil :count 2)
    ("expamples" "examples" nil :count 2)
    ("fiedls" "fields" nil :count 1)
    ("fileds" "fields" nil :count 1)
    ("fixtrue" "fixture" nil :count 1)
    ("frist" "first" nil :count 1)
    ("funciton" "function" nil :count 0)
    ("gruops" "groups" nil :count 1)
    ("id }

" "funciton" nil :count 0)
    ("insatnce" "instance" nil :count 1)
    ("instanct" "instance" nil :count 2)
    ("inteerval" "interval" nil :count 2)
    ("inteval" "interval" nil :count 1)
    ("intialize" "initialize" nil :count 3)
    ("invalide" "invalid" nil :count 2)
    ("isntance" "instance" nil :count 2)
    ("jounral" "journal" nil :count 19)
    ("jounralizable" "journalizable" nil :count 1)
    ("jounrals" "journals" nil :count 4)
    ("jounrnalizable" "journalizable" nil :count 1)
    ("jouranl" "journal" nil :count 11)
    ("locatoin" "location" nil :count 1)
    ("mbmer" "member" nil :count 1)
    ("meesage" "message" nil :count 1)
    ("minites" "minutes" nil :count 1)
    ("naem" "name" nil :count 2)
    ("nubmer" "number" nil :count 1)
    ("numnber" "number" nil :count 1)
    ("offce" "office" nil :count 1)
    ("offcie" "office" nil :count 2)
    ("offie" "office" nil :count 1)
    ("ofice" "office" nil :count 4)
    ("otehr" "other" nil :count 1)
    ("othre" "other" nil :count 1)
    ("paramegerized" "parameterized" nil :count 1)
    ("paryoll" "payroll" nil :count 1)
    ("passowrd" "password" nil :count 3)
    ("peirod" "period" nil :count 1)
    ("pendign" "pending" nil :count 1)
    ("persisited" "persisted" nil :count 8)
    ("positin" "position" nil :count 2)
    ("quantitiy" "quantity" nil :count 11)
    ("queeu" "queue" nil :count 1)
    ("realod" "reload" nil :count 2)
    ("regsiter" "register" nil :count 4)
    ("relaod" "reload" nil :count 6)
    ("remakr" "remark" nil :count 1)
    ("reocrd" "record" nil :count 1)
    ("reqeust" "request" nil :count 5)
    ("reqeusted" "requested" nil :count 1)
    ("requestd" "requested" nil :count 2)
    ("requet" "request" nil :count 2)
    ("resouce" "resource" nil :count 4)
    ("resouces" "resources" nil :count 2)
    ("resurces" "resources" nil :count 1)
    ("resutl" "result" nil :count 1)
    ("revetion" "revision" nil :count 2)
    ("rnadom" "random" nil :count 1)
    ("schdule" "schedule" nil :count 1)
    ("schefule" "schedule" nil :count 1)
    ("sequecne" "sequence" nil :count 1)
    ("shear" "share" nil :count 1)
    ("suepr" "super" nil :count 3)
    ("talbe" "table" nil :count 4)
    ("taransaction" "transaction" nil :count 1)
    ("tickket" "ticket" nil :count 1)
    ("tiem" "time" nil :count 2)
    ("tomoroow" "tomorrow" nil :count 13)
    ("transacito" "transaction" nil :count 0)
    ("transaciton" "transaction" nil :count 3)
    ("trasaction" "transaction" nil :count 1)
    ("udpate" "update" nil :count 1)
    ("undersocre" "underscore" nil :count 2)
    ("uniquness" "uniqueness" nil :count 4)
    ("unsigend" "unsigned" nil :count 1)
    ("wofkflow" "workflow" nil :count 2)
    ("workfklow" "workflow" nil :count 7)
    ("workfkow" "workflow" nil :count 1)
    ("workgin" "working" nil :count 3)
    ("yeta" "year_end_tax_adjustment" nil :count 4)
   ))

(define-abbrev-table 'ruby-mode-abbrev-table
  '(
    ("yeta" "year_end_tax_adjustment" nil :count 4)
   ))

