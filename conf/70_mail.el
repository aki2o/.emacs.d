;; (use-package bbdb)
;; (use-package bbdb-ext)
;; (use-package bbdb-)

;; (setq gnus-home-directory (concat user-emacs-directory "gnus"))
;; (use-package 'gnus-ez)
;; (use-package gnus-x-gm-raw)
;; (setq bbdb-:start-completion-key "C-M-i")
;; (gnus-ez:default-setup)
;; (gnus-ez--log-enable-logging)
;; (gnus-direx--log-enable-logging)
;; (e2wm-gnus--log-enable-logging)
;; (setq e2wm:debug t)

;; (setq message-directory (concat gnus-home-directory "/Mail"))
;; ;; (setq gnus-ignored-newsgroups       "^to\\.\\|^[0-9. ]+\\( \\|$\\)\\|^[\"]\"[#'()]")
;; (setq gnus-group-sort-function 'gnus-group-sort-by-server)
;; (setq nnmail-pathname-coding-system (cond ((~is-windows) 'sjis)
;;                                           (t             'utf-8)))

;; (setq gnus-ez:smtp-accounts '(("Google" . ((message-send-mail-function . smtpmail-send-it)
;;                                            (smtpmail-starttls-credentials . (("smtp.gmail.com" 587 nil nil)))
;;                                            (smtpmail-smtp-server . "smtp.gmail.com")
;;                                            (smtpmail-smtp-service . 587)
;;                                            (smtpmail-stream-type . ssl)
;;                                            (starttls-extra-args . ("-starttls" "smtp"))
;;                                            (user-full-name . "Hiroaki Otsu")
;;                                            (user-mail-address . "ootsuhiroaki@gmail.com")))
;;                               ("Yahoo!" . ((message-send-mail-function . smtpmail-send-it)
;;                                            (smtpmail-starttls-credentials . (("smtp.mail.yahoo.co.jp" 465 nil nil)))
;;                                            (smtpmail-smtp-server . "smtp.mail.yahoo.co.jp")
;;                                            (smtpmail-smtp-service . 465)
;;                                            (smtpmail-stream-type . ssl)
;;                                            (starttls-extra-args . nil)
;;                                            (user-full-name . "")
;;                                            (user-mail-address . "ootsuhiroaki19801005@yahoo.co.jp")))
;;                               (default  . ((message-send-mail-function . smtpmail-send-it)
;;                                            (smtpmail-starttls-credentials . (("smtp.gmail.com" 587 nil nil)))
;;                                            (smtpmail-smtp-server . "smtp.gmail.com")
;;                                            (smtpmail-smtp-service . 587)
;;                                            (smtpmail-stream-type . ssl)
;;                                            (starttls-extra-args . ("-starttls" "smtp"))
;;                                            (user-full-name . "Hiroaki Otsu")
;;                                            (user-mail-address . "ootsuhiroaki@gmail.com")))))

;; (setq gnus-select-method '(nnimap "Google"
;;                                   (nnimap-address "imap.gmail.com")
;;                                   (nnimap-server-port 993)
;;                                   (nnimap-stream ssl)
;;                                   (nnimap-inbox "[Gmail]/Inbox")))

;; (setq gnus-secondary-select-methods '((nnimap "Yahoo!"
;;                                               (nnimap-address "imap.mail.yahoo.co.jp")
;;                                               (nnimap-server-port 993)
;;                                               (nnimap-stream ssl)
;;                                               (nnimap-inbox "Inbox"))))

;; (setq bbdb-user-mail-names "ootsuhiroaki@gmail\\.com|ootsuhiroaki19801005@yahoo\\.co\\.jp")

;; ;; (setq bbdb-file (concat gnus-home-directory "/.bbdb"))
;; ;; (setq bbdb-mua-pop-up nil)
;; ;; (setq bbdb-auto-revert t)
;; ;; (setq bbdb-update-records-p nil)
;; ;; (setq bbdb-mua-auto-update-p nil)
;; ;; (setq bbdb-mua-update-interactive-p '(update . update))
;; ;; (setq bbdb-message-all-addresses t)
;; ;; (setq bbdb-message-try-all-headers t)
;; ;; (setq bbdb-layout 'multi-line)
;; ;; (setq bbdb-auto-notes-rules '(("X-Mailer"     ("\(xcite[^>]+> \|\)\(.*\)" mua 2))
;; ;;                               ("X-Newsreader" ("\(xcite[^>]+> \|\)\(.*\)" mua 2))
;; ;;                               ("User-Agent"   ("\(xcite[^>]+> \|\)\(.*\)" mua 2))
;; ;;                               ("X-ML-Name"    (".*$" ml 0))
;; ;;                               ("Reply-To"     ("^\([^@]+\)@" ml 1))
;; ;;                               ("X-URL"        (".*" www 0))
;; ;;                               ("X-Url"        (".*" www 0))
;; ;;                               ("X-URI"        (".*" www 0))
;; ;;                               ("X-Uri"        (".*" www 0))
;; ;;                               ("X-Emacs"      (".*" emacs 0))
;; ;;                               ("Organization" (".*" org 0))))
;; ;; ;; (set-face-foreground  'bbdb-name 'default)
;; ;; ;; (set-face-bold-p      'bbdb-name t)
;; ;; ;; (set-face-underline-p 'bbdb-name t)
;; ;; (bbdb-initialize 'gnus 'message)
;; ;; (bbdb-mua-auto-update-init 'gnus)

;; (define-key gnus-server-mode-map [(control k)] 'previous-line)
;; (define-key gnus-group-mode-map [(control k)] 'previous-line)
;; (define-key gnus-summary-mode-map [(control j)] 'next-line)
;; (define-key gnus-summary-mode-map [(control k)] 'previous-line)
;; (define-key gnus-summary-mode-map [(control h)] 'backward-char)
;; (define-key gnus-summary-mode-map [(control l)] 'forward-char)
;; (define-key gnus-article-mode-map [(control k)] 'previous-line)


;; (require 'bbdb-test)


;; (defun gnutls-available-p () nil)

;; (defadvice network-stream-open-tls (after replace-greeting-of-openssl activate)
;;   (let* ((proc (car ad-return-value))
;;          (greeting (or (ignore-errors
;;                          (with-current-buffer (process-buffer proc)
;;                            (buffer-string)))
;;                        (nth 1 ad-return-value)))
;;          (capabilities (nth 2 ad-return-value))
;;          (type (nth 3 ad-return-value)))
;;     (setq ad-return-value (list proc greeting capabilities type))))

;; (defadvice smtpmail-send-it (around fix-using-openssl activate)
;;   (let* ((exarg (mapconcat 'identity starttls-extra-args " "))
;;          (tls-program (or (when (eq smtpmail-stream-type 'ssl)
;;                             `(,(concat "openssl s_client -connect %h:%p -no_ssl2 -ign_eof " exarg)))
;;                           tls-program)))
;;     ad-do-it))

;; (defadvice nnir-run-imap (before decode-group activate)
;;   (ad-set-arg 2 (mapcar 'gnus-group-decoded-name (ad-get-arg 2))))

